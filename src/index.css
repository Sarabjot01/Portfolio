@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  cursor: none !important;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}

html {
  scroll-behavior: smooth;
}

/* Enhanced Cyberpunk Animations */
@keyframes glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(50px) rotateX(10deg);
  }
  to {
    opacity: 1;
    transform: translateY(0) rotateX(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100px) rotateY(10deg);
  }
  to {
    opacity: 1;
    transform: translateX(0) rotateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100px) rotateY(-10deg);
  }
  to {
    opacity: 1;
    transform: translateX(0) rotateY(0);
  }
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink {
  50% { border-color: transparent; }
}

@keyframes gridMove {
  0% { transform: translate(0, 0); }
  100% { transform: translate(50px, 50px); }
}

@keyframes neuralPulse {
  0%, 100% { 
    opacity: 0.3;
    transform: scale(1);
  }
  50% { 
    opacity: 1;
    transform: scale(1.5);
  }
}

@keyframes float {
  0%, 100% { 
    transform: translateY(0px) rotate(0deg);
    opacity: 0.3;
  }
  50% { 
    transform: translateY(-20px) rotate(180deg);
    opacity: 1;
  }
}

@keyframes dataFlow {
  0% { 
    transform: translateX(-100px) translateY(0);
    opacity: 0;
  }
  50% { 
    opacity: 1;
  }
  100% { 
    transform: translateX(100vw) translateY(-50px);
    opacity: 0;
  }
}

@keyframes scan {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100vh); }
}

@keyframes neuralScan {
  0% { transform: scaleX(0); }
  50% { transform: scaleX(1); }
  100% { transform: scaleX(0); }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes spinSlow {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes spinReverse {
  from { transform: rotate(360deg); }
  to { transform: rotate(0deg); }
}

@keyframes cyberReveal {
  0% {
    opacity: 0;
    transform: translateY(50px) rotateX(20deg);
    filter: blur(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0) rotateX(0);
    filter: blur(0);
  }
}

@keyframes counterAnimation {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes loadingProgress {
  0% { width: 0%; }
  50% { width: 70%; }
  100% { width: 100%; }
}

/* Enhanced Animation Classes */
.animate-fade-in {
  animation: fadeIn 1s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 1s ease-out forwards;
}

.animate-slide-in-right {
  animation: slideInRight 1s ease-out forwards;
}

.animate-grid-move {
  animation: gridMove 20s linear infinite;
}

.animate-neural-pulse {
  animation: neuralPulse 3s ease-in-out infinite;
}

.animate-float {
  animation: float 8s ease-in-out infinite;
}

.animate-data-flow {
  animation: dataFlow 10s linear infinite;
}

.animate-scan {
  animation: scan 2s linear infinite;
}

.animate-neural-scan {
  animation: neuralScan 2s ease-in-out infinite;
}

.animate-shimmer {
  animation: shimmer 2s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spinSlow 8s linear infinite;
}

.animate-spin-reverse {
  animation: spinReverse 6s linear infinite;
}

.animate-cyber-reveal {
  animation: cyberReveal 1s ease-out forwards;
}

.counter-animation {
  animation: counterAnimation 1s ease-out forwards;
}

/* Enhanced Glitch Text Effect */
.glitch-text {
  position: relative;
  display: inline-block;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  animation: glitch 2s infinite;
  color: #ff00ff;
  z-index: -1;
}

.glitch-text::after {
  animation: glitch 3s infinite reverse;
  color: #00ffff;
  z-index: -2;
}

/* Enhanced Typing Animation */
.typing-container {
  position: relative;
  display: inline-block;
}

.typing-text {
  overflow: hidden;
  border-right: 3px solid #00FFFF;
  white-space: nowrap;
  animation: typing 4s steps(40, end), blink 1s step-end infinite;
}

.cursor-blink {
  animation: blink 1s step-end infinite;
  color: #00FFFF;
  font-weight: bold;
}

/* Enhanced Cyberpunk Components */
.cyberpunk-button {
  position: relative;
  overflow: hidden;
  clip-path: polygon(0 0, calc(100% - 20px) 0, 100% 100%, 20px 100%);
  transition: all 0.3s ease;
}

.cyberpunk-button:hover {
  clip-path: polygon(0 0, calc(100% - 10px) 0, 100% 100%, 10px 100%);
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
}

.cyberpunk-button-outline {
  position: relative;
  overflow: hidden;
  clip-path: polygon(20px 0, 100% 0, calc(100% - 20px) 100%, 0 100%);
  transition: all 0.3s ease;
}

.cyberpunk-button-outline:hover {
  clip-path: polygon(10px 0, 100% 0, calc(100% - 10px) 100%, 0 100%);
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
}

.cyberpunk-card {
  position: relative;
  overflow: hidden;
  clip-path: polygon(0 0, calc(100% - 10px) 0, 100% calc(100% - 10px), 10px 100%);
  transition: all 0.5s ease;
}

.cyberpunk-card:hover {
  clip-path: polygon(0 0, calc(100% - 5px) 0, 100% calc(100% - 5px), 5px 100%);
}

.cyberpunk-input {
  clip-path: polygon(10px 0, 100% 0, calc(100% - 10px) 100%, 0 100%);
  transition: all 0.3s ease;
}

.cyberpunk-input:focus {
  clip-path: polygon(5px 0, 100% 0, calc(100% - 5px) 100%, 0 100%);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
}

.cyberpunk-download {
  clip-path: polygon(20px 0, calc(100% - 20px) 0, 100% 20px, 100% calc(100% - 20px), calc(100% - 20px) 100%, 20px 100%, 0 calc(100% - 20px), 0 20px);
  transition: all 0.3s ease;
}

.cyberpunk-download:hover {
  clip-path: polygon(10px 0, calc(100% - 10px) 0, 100% 10px, 100% calc(100% - 10px), calc(100% - 10px) 100%, 10px 100%, 0 calc(100% - 10px), 0 10px);
}

/* Enhanced Holographic Effects */
.holographic-text {
  background: linear-gradient(45deg, #00ffff, #ff00ff, #00ff00, #ffff00);
  background-size: 400% 400%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: holographicShift 3s ease-in-out infinite;
}

@keyframes holographicShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.cyber-glow {
  text-shadow: 0 0 10px #00ffff, 0 0 20px #00ffff, 0 0 30px #00ffff;
}

.loading-bar {
  animation: loadingProgress 3s ease-in-out forwards;
}

/* Enhanced Glassmorphism */
.glass {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Enhanced Scrollbar */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: #0a0a0a;
  border-radius: 6px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to bottom, #00ffff, #ff00ff);
  border-radius: 6px;
  border: 2px solid #0a0a0a;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(to bottom, #00cccc, #cc00cc);
}

/* Enhanced Neon Effects */
.neon-glow {
  box-shadow: 
    0 0 5px #00ffff,
    0 0 10px #00ffff,
    0 0 15px #00ffff,
    0 0 20px #00ffff;
}

.neon-text {
  text-shadow: 
    0 0 5px #00ffff,
    0 0 10px #00ffff,
    0 0 15px #00ffff,
    0 0 20px #00ffff;
}

/* Responsive Enhancements */
@media (max-width: 768px) {
  .typing-text {
    animation: typing 3s steps(30, end), blink 1s step-end infinite;
  }
  
  .glitch-text::before,
  .glitch-text::after {
    animation-duration: 1.5s;
  }
  
  .cyberpunk-button,
  .cyberpunk-button-outline,
  .cyberpunk-card {
    clip-path: none;
  }
}

/* Enhanced Hover Effects */
.hover-lift {
  transition: transform 0.5s ease, box-shadow 0.5s ease;
}

.hover-lift:hover {
  transform: translateY(-10px) rotateX(5deg);
  box-shadow: 0 20px 40px rgba(0, 255, 255, 0.3);
}

/* Enhanced Grid Animations */
.grid-item {
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.grid-item:hover {
  transform: scale(1.05) rotateX(10deg) rotateY(5deg);
  z-index: 10;
}

/* Enhanced Loading Spinner */
.cyberpunk-spinner {
  width: 50px;
  height: 50px;
  border: 4px solid transparent;
  border-top: 4px solid #00ffff;
  border-right: 4px solid #ff00ff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  position: relative;
}

.cyberpunk-spinner::after {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  border: 2px solid transparent;
  border-top: 2px solid #00ff00;
  border-radius: 50%;
  animation: spin 2s linear infinite reverse;
}

/* Enhanced Particle Effects */
.particle {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  filter: blur(1px);
}

.particle::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 200%;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle, rgba(0, 255, 255, 0.8) 0%, transparent 70%);
  animation: particlePulse 2s ease-in-out infinite;
}

@keyframes particlePulse {
  0%, 100% { opacity: 0.3; transform: translate(-50%, -50%) scale(1); }
  50% { opacity: 1; transform: translate(-50%, -50%) scale(1.5); }
}

/* Accessibility Enhancements */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Enhanced Focus Styles */
button:focus-visible,
input:focus-visible,
textarea:focus-visible {
  outline: 3px solid #00ffff;
  outline-offset: 3px;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
}

/* Timeline Specific Animations */
.timeline-item {
  opacity: 0;
  transform: translateY(50px);
  transition: all 0.8s ease-out;
}

.timeline-item.animate-cyber-reveal {
  opacity: 1;
  transform: translateY(0);
}

/* Enhanced Matrix Rain Effect */
.matrix-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

/* Custom Cursor Enhancements */
.cursor-trail {
  position: fixed;
  width: 20px;
  height: 20px;
  border: 2px solid #00ffff;
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: difference;
  transition: all 0.1s ease;
}

.cursor-trail.active {
  transform: scale(2);
  border-color: #ff00ff;
}

/* Enhanced Button Animations */
.btn-cyberpunk {
  position: relative;
  overflow: hidden;
  background: linear-gradient(45deg, #00ffff, #ff00ff, #00ff00, #ffff00);
  background-size: 400% 400%;
  animation: gradientShift 4s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Enhanced Holographic Displays */
.holographic-display {
  background: linear-gradient(135deg, 
    rgba(0, 255, 255, 0.1) 0%,
    rgba(255, 0, 255, 0.1) 25%,
    rgba(0, 255, 0, 0.1) 50%,
    rgba(255, 255, 0, 0.1) 75%,
    rgba(0, 255, 255, 0.1) 100%);
  background-size: 400% 400%;
  animation: holographicShift 5s ease-in-out infinite;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 255, 255, 0.3);
}

/* Neural Network Visualization */
.neural-connection {
  position: absolute;
  width: 2px;
  background: linear-gradient(90deg, transparent, #00ffff, transparent);
  animation: neuralFlow 3s linear infinite;
}

@keyframes neuralFlow {
  0% { opacity: 0; transform: scaleX(0); }
  50% { opacity: 1; transform: scaleX(1); }
  100% { opacity: 0; transform: scaleX(0); }
}

/* Enhanced Quantum Effects */
.quantum-field {
  position: relative;
  overflow: hidden;
}

.quantum-field::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: conic-gradient(from 0deg, transparent, #00ffff, transparent, #ff00ff, transparent);
  animation: quantumRotate 10s linear infinite;
  opacity: 0.1;
}

@keyframes quantumRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}